import math

const = (3 - math.sqrt(5)) / 2


def rapabolicRegex(x1, x2, x3, y1, y2, y3):
    return x2 - 0.5 * (math.pow(x2 - x1, 2) * (y2 - y3) - math.pow(x2 - x3, 2) * (y2 - y1)) / ((x2 - x1) * (y2 - y3) - (x2 - x3) * (y2 - y1))



def parabolic(f, l, r, eps):
    table = []
    count = 0
    v = 0
    table.append((l, r))
    x1 = l
    x2 = (l + r) / 2
    x3 = r
    f1 = f(x1)
    f2 = f(x2)
    f3 = f(x3)
    v += 3

    while (x3 - x1) > eps:
        count += 1
        u = rapabolicRegex(x1, x2, x3, f1, f2, f3)
        f_u = f(u)
        v += 1

        if f_u > f2:
            if u < x2:
                x1 = u
                f1 = f_u
            else:
                x3 = u
                f3 = f_u
        else:
            if u < x2:
                x3 = x2
                f3 = f2
            else:
                x1 = x2
                f1 = f2

        x2 = (x1 + x3) / 2
        f2 = f(x2)
        v += 1
        table.append((x1, x3))

        x_min = (x1 + x3) / 2

    return x_min, count, v


# Находит координату х, вершины парабалы (Метод "Золотое сечение")
def parabolic_minimum(x1, x2, x3, f1, f2, f3):
    return x2 - 0.5 * ((x2 - x1) ** 2 * (f2 - f3) - (x2 - x3) ** 2 * (f2 - f1)) / (
            (x2 - x1) * (f2 - f3) - (x2 - x3) * (f2 - f1))


# Возвращает True, если все значения разные
def are_different(a, b, c):
    return a != b and b != c and a != c


def a(x):
    return math.log(x, 10) * math.sin(x) * x ** 2


i = 0.1

for j in range(9):
    print(i)
    print(parabolic(a, 0.000001, 1, i))
    i /= 10
'''
print(parabolic(a, 0.00000000000001, 1, i))
'''
